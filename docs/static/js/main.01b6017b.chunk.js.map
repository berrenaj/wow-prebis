{"version":3,"sources":["events.js","api.js","actions/index.js","components/Connect.js","components/Logo.js","components/screens/NotFound.js","utils.js","components/ItemIcon.js","components/Item.js","components/Table.js","components/screens/Page.js","components/screens/Class.js","components/screens/Spec.js","components/ClassSpecLinks.js","components/Class.js","components/ClassList.js","components/App.js","serviceWorker.js","reducers/Data.js","reducers/index.js","index.js","store.js"],"names":["INIT","LOADING_EQUIPMENT_START","LOADING_EQUIPMENT_SUCCESS","LOADING_EQUIPMENT_ERROR","API","EQUIPMENT","getEquipment","dispatch","url","type","EVENTS","fetch","mode","redirect","then","res","status","json","data","equipment","connect","state","Object","objectSpread","Actions","withRouter","props","react_default","a","createElement","className","react_router_dom","to","pathname","Connect","React","Component","ucFirst","string","charAt","toUpperCase","slice","getItemFromData","params","class","c","cls","keys","specs","forEach","s","i","getItems","items","filter","key","index","Array","isArray","concat","getClassFromData","spec","ItemIcon","size","style","backgroundImage","icon","Item","quality","href","id","target","rel","name","Table","rows","headers","footers","length","cellType","createTableCells","map","d","children","constructor","Header","int","single","plural","push","join","title","TableLayout","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","value","prevProps","setState","item","lvl","reqlvl","armor","stamina","spirit","strength","agility","intellect","getRows","Body","_React$Component2","_this2","layout","Page_TableLayout","getTableLayout","UTILS","Data","match","Fragment","Page_Header","Page_Body","screens_NotFound","ClassSpecLinks","toLowerCase","activeClassName","Class","ClassList","Classes","active","location","substring","components_Class","App","Logo","components_ClassList","react_router","exact","path","render","component","ClassScreen","SpecScreen","Boolean","window","hostname","defaultState","combineReducers","arguments","undefined","action","indexOf","ReactDOM","es","store","initialState","createStore","reducers","applyMiddleware","thunk","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.01b6017b.chunk.js","sourcesContent":["export const INIT = 'INIT';\r\nexport const LOADING_EQUIPMENT_START = 'LOADING_EQUIPMENT_START';\r\nexport const LOADING_EQUIPMENT_SUCCESS = 'LOADING_EQUIPMENT_SUCCESS';\r\nexport const LOADING_EQUIPMENT_ERROR = 'LOADING_EQUIPMENT_ERROR';","const API = {\r\n  EQUIPMENT: 'https://script.google.com/macros/s/AKfycbwGCJ3sCW9z-f2DSyjwlBVcYL2r1MIvJSirRJd7qd8G40Va-X4/exec'\r\n};\r\n\r\nexport default API;","import * as EVENTS from '../events';\r\nimport API from '../api';\r\n\r\nconst _get = function(url) {\r\n  return fetch(url, {\r\n    mode: 'cors',\r\n    redirect: \"follow\",\r\n  });\r\n};\r\n\r\nexport const getEquipment = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: EVENTS.LOADING_EQUIPMENT_START\r\n    });\r\n    _get(API.EQUIPMENT).then((res) => {\r\n      if (res.status === 200) {\r\n        res.json().then((data) => {\r\n          dispatch({\r\n            type: EVENTS.LOADING_EQUIPMENT_SUCCESS,\r\n            equipment: data\r\n          });\r\n        })\r\n      } else {\r\n        dispatch({\r\n          type: EVENTS.LOADING_EQUIPMENT_ERROR\r\n        });\r\n      }\r\n    });\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport * as Actions from '../actions';\r\n\r\nconst mapStateToProps = state => ({\r\n ...state\r\n});\r\n\r\nexport default connect(mapStateToProps, {...Actions});","import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport '../scss/components/_Logo.scss';\r\n\r\nexport default withRouter((props) => {\r\n  return (\r\n    <h1 className=\"logo\">\r\n      <NavLink to={ { pathname: '/' } }>\r\n        <span>WoW Pre-BiS!</span>\r\n        <small className=\"emphasis\">Best in slot gear for pre-raid characters</small>\r\n      </NavLink>\r\n    </h1>\r\n  );\r\n});","import React from 'react';\r\nimport Connect from '../Connect';\r\n\r\nclass NotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"NotFoundScreen\">\r\n        <h1>Sorry :(</h1>\r\n        <p>Page not found</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Connect(NotFound);\r\n","\r\nexport const ucFirst = (string) => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n};\r\n\r\nexport const formatPlural = (int, single, plural) => {\r\n  if (int === 1) {\r\n    return single;\r\n  }\r\n\r\n  return plural;\r\n}\r\n\r\nexport const getClassFromData = (data, cls) => {\r\n  let c = data[ucFirst(cls)];\r\n\r\n  if (c) {\r\n    Object.keys(c.specs).forEach((s, i) => {\r\n      c.specs[s].class = c;\r\n      c.specs[s].getItems = () => {\r\n        let items = [];\r\n        Object.keys(c.specs[s]).filter((key, index) => {\r\n          return c.specs[s][key] && Array.isArray(c.specs[s][key])\r\n        }).forEach((key, i) => {\r\n          items = items.concat(c.specs[s][key]);\r\n        });\r\n\r\n        return items;\r\n      }\r\n    });\r\n\r\n    c.getItems = () => {\r\n      let items = [];\r\n      Object.keys(c.specs).forEach((key, index) => {\r\n        items = items.concat(c.specs[key].getItems());\r\n      });\r\n\r\n      return items;\r\n    }\r\n\r\n    return c;\r\n  }\r\n\r\n  return;\r\n};\r\n\r\nexport const getItemFromData = (data, params) => {\r\n  if (params.class) {\r\n    let c = getClassFromData(data, ucFirst(params.class));\r\n\r\n    if (!c) {\r\n      return;\r\n    }\r\n\r\n    if (params.spec) {\r\n      return c.specs[ucFirst(params.spec)];\r\n    }\r\n\r\n    return c;\r\n  }\r\n};","import React from 'react';\r\nimport '../scss/components/_Item.scss';\r\n\r\nexport default (props) => {\r\n  return (\r\n    <i className={ \"item__icon\" + (props.size ? \" item__icon--\" + props.size : '') } style={ { backgroundImage: \"url(/img/icon/\" + props.icon + \".jpg)\" } }></i>\r\n  );\r\n}","import React from 'react';\r\nimport ItemIcon from './ItemIcon';\r\n\r\nexport default (props) => {\r\n  return (\r\n    <a className={`item item--quality${props.quality}`} href={`https://classic.wowhead.com/item=${props.id}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      <ItemIcon {...props } />\r\n      { props.name }\r\n  \t</a>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default (props) => {\r\n  const rows = props.rows || [];\r\n  const headers = props.headers || [];\r\n  const footers = props.footers || [];\r\n\r\n  if (!rows.length && !headers.length) {\r\n    return null;\r\n  }\r\n\r\n  const createTableCells = (data, cellType) => {\r\n    return data.map((d, i) => {\r\n      var props = {};//typeof d === 'string' ? {} : (d.props || {});\r\n      props.key = i;\r\n      props.children = null;\r\n      \r\n      // Check primitive object\r\n      if (d !== Object(d)) {\r\n        props.children = d;\r\n\r\n      // Or check that data is part of a vanilla object\r\n      } else if (d.constructor === Object && d.data) {\r\n        props.children = d.data;\r\n      } else {\r\n        props.children = d;\r\n      }\r\n\r\n      return React.createElement(cellType, props);\r\n    });\r\n  };\r\n\r\n  const createTableRows = (data, cellType) => {\r\n    return data.filter((d) => {\r\n      // Test that each row is a vanilla js object\r\n      return d instanceof Object && (d.constructor === Object) && d.data;\r\n    }).map((d, i) => {\r\n      const props = d.props || {};\r\n      props.key = i;\r\n      return (\r\n        <tr {...props}>{ createTableCells(d.data, cellType)}</tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <table className={ props.className }>\r\n      { headers.length > 0 && <thead><tr>{ createTableCells(headers, 'th') }</tr></thead> }\r\n      { rows.length > 0 && <tbody>{ createTableRows(rows, 'td') }</tbody> }\r\n      { footers.length > 0 && <tfoot><tr>{ createTableCells(footers, 'td') }</tr></tfoot> }\r\n    </table>\r\n  );\r\n}","import React from 'react';\r\nimport * as UTILS from '../../utils';\r\nimport Item from '../Item';\r\nimport Table from '../Table';\r\nimport '../../scss/components/_ItemTable.scss';\r\n\r\nexport const Header = (props) => {\r\n  let items = props.data.getItems();\r\n  let className = ['pageheader'];\r\n  if (props.className) {\r\n    className.push(props.className);\r\n  }\r\n  return (\r\n    <header className={className.join(' ')}>\r\n      <h2>{props.title}</h2>\r\n      <p>{items.length} {UTILS.formatPlural(items.length, 'item', 'items')} found</p>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport class TableLayout extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: props.items\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.name !== this.props.name) {\r\n      this.setState({ items: this.props.items });\r\n    }\r\n  }\r\n\r\n  getRows() {\r\n    return this.state.items.map((item, i) => {\r\n      return {\r\n        data: [\r\n          <Item {...item} />,\r\n          <span className=\"label item--stat\" title=\"Level\">{ item.lvl }</span>,\r\n          <span className=\"label item--stat\" title=\"Required Level\">{ item.reqlvl }</span>,\r\n          <span className=\"label item--stat\" title=\"Armor\">{ item.armor }</span>,\r\n          <span className=\"label item--stat\" title=\"Stamina\">{ item.stamina }</span>,\r\n          <span className=\"label item--stat\" title=\"Spirit\">{ item.spirit }</span>,\r\n          <span className=\"label item--stat\" title=\"Strength\">{ item.strength }</span>,\r\n          <span className=\"label item--stat\" title=\"Agility\">{ item.agility }</span>,\r\n          <span className=\"label item--stat\" title=\"Intellect\">{ item.intellect }</span>\r\n        ]\r\n      };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.items.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Table className=\"items\" headers={ ['Name', 'Lvl', 'Req Lvl', 'Armor', 'Stamina', 'Spirit', 'Strength', 'Agility', 'Intellect'] } rows={ this.getRows() } />\r\n    );\r\n  }\r\n};\r\n\r\nexport class Body extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      layout: 'table'\r\n    };\r\n  }\r\n\r\n  getTableLayout() {\r\n    return <TableLayout items={ this.props.data.getItems() } name={ this.props.data.name } />\r\n  }\r\n\r\n  render() {\r\n    return this.getTableLayout();\r\n  }\r\n};\r\n","import React from 'react';\r\nimport Connect from '../Connect';\r\nimport NotFoundScreen from './NotFound';\r\nimport * as UTILS from '../../utils';\r\nimport * as Page from './Page';\r\n\r\nclass Class extends React.Component {\r\n  render() {\r\n\r\n    const cls = UTILS.getItemFromData(this.props.Data.equipment, this.props.match.params);\r\n    if (!cls) {\r\n      return (\r\n        <NotFoundScreen />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Page.Header title={ cls.name } data={ cls } />\r\n        <Page.Body data={ cls } />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Connect(Class);\r\n","import React from 'react';\r\nimport Connect from '../Connect';\r\nimport NotFoundScreen from './NotFound';\r\nimport * as Page from './Page';\r\nimport * as UTILS from '../../utils';\r\n\r\nclass Spec extends React.Component {\r\n  render() {\r\n\r\n    const spec = UTILS.getItemFromData(this.props.Data.equipment, this.props.match.params);\r\n    if (!spec) {\r\n      return (\r\n        <NotFoundScreen />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Page.Header title={ spec.name + ' ' + spec.class.name } data={ spec } />\r\n        <Page.Body data={ spec } />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Connect(Spec);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default (props) => {\r\n  if (!props.class || !props.class.specs) {\r\n    return null;\r\n  }\r\n\r\n  return  Object.keys(props.class.specs).map((s, i) => {\r\n    return (\r\n      <li key={ i }>\r\n        <NavLink \r\n          to={ { pathname: ['/', props.class.name, '/', s].join('').toLowerCase() } }\r\n          activeClassName=\"active\"\r\n          className={ ['c-wcl__spec', 'c-wcl__spec--' + s.toLowerCase()].join(' ') }\r\n        >\r\n          {s}\r\n        </NavLink>\r\n      </li>\r\n    );\r\n  });\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ClassSpecLinks from './ClassSpecLinks';\r\n\r\nclass Class extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <NavLink \r\n          to={ { pathname: '/' + this.props.class.name.toLowerCase() } } \r\n          className={ ['classlist__class', 'classlist__class--' + this.props.class.name.toLowerCase()].join(' ') } \r\n          activeClassName=\"active\"\r\n        >\r\n          {this.props.class.name}\r\n        </NavLink>\r\n        <ul className=\"classlist__class__specs\">\r\n          <ClassSpecLinks class={ this.props.class } />\r\n        </ul>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Class;","import React from 'react';\r\nimport Connect from './Connect';\r\nimport Class from './Class';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../scss/components/_ClassList.scss';\r\n\r\nclass ClassList extends React.Component {\r\n  render() {\r\n    const Classes = Object.keys(this.props.Data.equipment);\r\n    return (\r\n      <nav className=\"classlist\">\r\n        <ul>\r\n          { Classes.map((c, i) => {\r\n            const active = this.props.location.pathname.substring(1, c.length + 1) === c.toLowerCase();\r\n            return (\r\n              <li className={ active ? \"active\" : null } key={ i }>\r\n                <Class class={ this.props.Data.equipment[c] } />\r\n              </li>\r\n            )\r\n          }) }\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Connect(ClassList));\r\n","import React from 'react';\r\nimport Connect from './Connect';\r\nimport Logo from './Logo';\r\nimport ClassScreen from './screens/Class';\r\nimport SpecScreen from './screens/Spec';\r\nimport NotFoundScreen from './screens/NotFound';\r\nimport ClassList from './ClassList';\r\nimport * as EVENTS from '../events';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport '../scss/global.scss';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    props.getEquipment();\r\n  }\r\n\r\n  render() {\r\n    if (this.props.Data.status === EVENTS.LOADING_EQUIPMENT_START) {\r\n      return (\r\n        <div className=\"app-loading\"></div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App container\">\r\n          <Logo />\r\n          <ClassList />\r\n          <Switch>\r\n            <Route exact path=\"/\" render={ () => <p><em className=\"emphasis\">Choose a class to begin.</em></p> } />\r\n            <Route exact path=\"/:class\" component={ClassScreen} />\r\n            <Route exact path=\"/:class/:spec\" component={SpecScreen} />\r\n            <Route render={ () => <NotFoundScreen /> } />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Connect(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as EVENTS from '../events';\r\n\r\nconst defaultState = {\r\n  status: EVENTS.INIT\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  if (Object.keys(EVENTS).indexOf(action.type) >= 0) {\r\n    state['status'] = action.type;\r\n  }\r\n  \r\n  switch (action.type) {\r\n  case EVENTS.LOADING_EQUIPMENT_SUCCESS:\r\n    return { ...state, equipment: action.equipment };\r\n  default:\r\n    return { ...state };\r\n  }\r\n};","import { combineReducers } from 'redux';\r\nimport Data from './Data';\r\n\r\nexport default combineReducers({\r\n  Data\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store()}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\n\r\nexport default function store(initialState={ }) {\r\n return createStore(\r\n   reducers,\r\n   initialState,\r\n   applyMiddleware(thunk)\r\n );\r\n}"],"sourceRoot":""}